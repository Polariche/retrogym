// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.retrogym";
option java_outer_classname = "RetrogymProto";
option objc_class_prefix = "HLW";

package retrogym;

// The greeting service definition.
service GRPCEmulator {
  rpc Init (PathRequest) returns (BoolValue) {}
  rpc Deinit (Void) returns (BoolValue) {}
  rpc LoadGame (PathRequest) returns (BoolValue) {}
  rpc UnloadGame (Void) returns (BoolValue) {}
  rpc LoadState (PathRequest) returns (BoolValue) {}
  rpc SaveState (PathRequest) returns (BoolValue) {}

  rpc Run (Void) returns (BoolValue) {}
  rpc Reset (Void) returns (BoolValue) {}
  rpc Width (Void) returns (Int32Value) {}
  rpc Height (Void) returns (Int32Value) {}
  rpc GetKeys (Void) returns (KeysResponse) {}
  rpc SetKey (SetKeyRequest) returns (Void) {}

  // rpc GetVideo
  rpc GetMemorySize (MemorySizeRequest) returns (MemorySizeResponse) {}
  rpc GetMemoryData (MemoryDataRequest) returns (MemoryDataResponse) {}
}


message BoolValue {
  bool bool = 1;
}

message Int32Value {
  int32 int32 = 1;
}

message PathRequest {
  string path = 1;
}

message Key {
  int32 id = 1;
  string description = 2;
}

message KeysResponse {
  repeated Key keys = 1;
}

message Void {}

message SetKeyRequest {
  int32 id = 1;
  bool value = 2;
}


message MemorySizeRequest {
  uint32 id = 1;
}

message MemoryDataRequest {
  uint32 id = 1;
  uint32 addr = 2;
}

message MemorySizeResponse {
  uint32 size = 1;
}

message MemoryDataResponse {
  uint32 data = 1;
}
